blueprint:
  name: Trash Reminder via Calendar with Event Name as Trash Type
  description: >
    Sends trash day reminders at 10:00, 16:00, and 22:00 if any event is found in your trash calendar for tomorrow.
    Uses the event's name as the trash type.
    On the first notification, a todo item is added (via the Local Todo integration) with an ID in the format "EVENT_NAME-YYYY-MM-DD".
    The notification includes an action to mark the todo as done, preventing duplicate reminders.
    Can be triggered manually via event 'trash_reminder_check' for testing.
  domain: automation
  input:
    calendar_entity:
      name: Trash Calendar
      description: "Calendar entity containing your trash day events."
      selector:
        entity:
          domain: calendar
    devices:
      name: Devices to Notify
      description: "Select mobile devices to receive notifications."
      selector:
        device:
          filter:
            integration: mobile_app
          multiple: true

trigger:
  - platform: time
    at: "10:00:00"
  - platform: time
    at: "16:00:00"
  - platform: time
    at: "22:00:00"
  - platform: event
    event_type: mobile_app_notification_action
  - platform: event
    event_type: trash_reminder_check

condition:
  - condition: or
    conditions:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'event' and trigger.event.event_type == 'mobile_app_notification_action' }}"
          - condition: template
            value_template: "{{ trigger.event.data.action == 'mark_done' }}"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ trigger.platform == 'event' and trigger.event.event_type == 'trash_reminder_check' }}
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'time' }}"
          - condition: template
            value_template: >-
              {% set calendar = states(states[input.calendar_entity]) %}
              {% set tomorrow = now() + timedelta(days=1) %}
              {% set event_date = strptime(state_attr(states[input.calendar_entity], 'start_time'), '%Y-%m-%d').date() %}
              {{ event_date == tomorrow.date() }}

action:
  - variables:
      event_name: "{{ state_attr(states[input.calendar_entity], 'message') }}"
      task_id: "{{ state_attr(states[input.calendar_entity], 'message') }}-{{ now().date() + timedelta(days=1) }}"
  
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'event' and trigger.event.event_type == 'mobile_app_notification_action' }}"
        sequence:
          - service: todo.complete
            data:
              task: "{{ task_id }}"
          - service: persistent_notification.dismiss
            data:
              notification_id: "{{ task_id }}"
      
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'time' or (trigger.platform == 'event' and trigger.event.event_type == 'trash_reminder_check') }}"
        sequence:
          - service: todo.add
            data:
              task: "{{ task_id }}"
              title: "Trash Reminder"
              message: "Don't forget to take out the {{ event_name }} bin for tomorrow."
          
          - service: persistent_notification.create
            data:
              notification_id: "{{ task_id }}"
              title: "Trash day!"
              message: "Don't forget to take out the {{ event_name }} bin for tomorrow.\n\nClick **Mark Done** when finished."
              data:
                actions:
                  - action: "mark_done"
                    title: "Mark Done"
                icon: mdi:trash-can
          
          - repeat:
              for_each: !input devices
              sequence:
                - service: "notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}"
                  data:
                    title: "Trash day!"
                    message: "Don't forget to take out the {{ event_name }} bin for tomorrow."
                    data:
                      actions:
                        - action: "mark_done"
                          title: "Mark Done"
                      icon: mdi:trash-can

mode: single